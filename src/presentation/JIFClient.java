

package presentation;

import beans.Client;
import dao.ClientDao;
import dao.DaoException;
import dao.DaoFactory;
import daoMysql.ClientDaoMysql;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;


public class JIFClient extends javax.swing.JInternalFrame {

    private DaoFactory factory = DaoFactory.getInstance();
    private ClientDao daoCli = factory.getDAOClient();
    private TableModelClient myCliModel = new TableModelClient(daoCli.selectClient());
    
    
    public JIFClient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCli = new JTable (myCliModel);
        jButtonAjouter = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Client"));
        setVisible(true);

        jScrollPane1.setViewportView(jTableCli);

        jButtonAjouter.setText("Ajouter");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonSupprimer.setText("supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonModifier.setText("modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAjouter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSupprimer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModifier)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAjouter)
                    .addComponent(jButtonSupprimer)
                    .addComponent(jButtonModifier)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
       
             if (jTableCli.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer client numero " +
                    myCliModel.getValueAt(jTableCli.convertRowIndexToModel(jTableCli.getSelectedRow()), 0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION)
                try {    
                    daoCli.deleteClient((int)myCliModel.getValueAt(jTableCli.convertRowIndexToModel(jTableCli.getSelectedRow()), 0));
                }
                catch (DaoException e) {
                    JOptionPane.showMessageDialog(null,"Suppression impossible !","Avertissement",JOptionPane.ERROR_MESSAGE);
                    e.printStackTrace();
                }
        }
        // après la suppression : rafraîchir les données en relisant la BD
        myCliModel.setMyList(daoCli.selectClient()); 
        
        
        
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed

           JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDClientInsert(parent, true);
        // après l'insertion : rafraîchir les données en relisant la BD
        myCliModel.setMyList(daoCli.selectClient()); 


     
    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        
           if (jTableCli.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(this,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            // renvoie l'objet client à passer en paramètre
            Client cli = myCliModel.getMyList(jTableCli.convertRowIndexToModel(jTableCli.getSelectedRow()));
                      
            // récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDClientModif(parent, "modification client", cli);
            
            // après la modification : rafraîchir les données en relisant la BD
            myCliModel.setMyList(daoCli.selectClient()); 
        }
    }                                               
        
        
        
      /*  
    }//GEN-LAST:event_jButtonModifierActionPerformed
*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCli;
    // End of variables declaration//GEN-END:variables

}